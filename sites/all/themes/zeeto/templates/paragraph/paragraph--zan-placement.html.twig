{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ content.field_libraries }}
{{ attach_library('zeeto/zanFooter') }}

<script>
  (function(w,d,s,p,a){
    var z=w.zan=w.zan||[],f=d.getElementsByTagName(s)[0],j=d.createElement(s);
    z.a=!!a;z.b=[];z.p=p;z.on=function(e, cb){z.b.push({e:e,cb:cb})};
    j.async=true;
    j.src='https://zan-staging-placements.s3.amazonaws.com/zeeto.js?v=' + Date.now();
    f.parentNode.insertBefore(j, f);
  })(window, document, 'script', '{{ content.field_placement_id|field_value }}');

</script>

<div class="zan-placement js-zan {{ content.field_wrapper_class|field_value }}">
  {{ content.field_content }}
  <div id="zeeto"></div>
</div>