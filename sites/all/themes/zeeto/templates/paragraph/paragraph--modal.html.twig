{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ content.field_libraries }}


<!-- Button trigger modal -->

{% if content.field_type_of_modal[0]['#markup'] == 'Button' %}
  <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#{% spaceless %}{{ content.field_field_id|field_value }}{% endspaceless %}" onclick="Visit.setComponent('modal-button','click', true)">
    {{ content.field_button_text }}
  </button>
{% endif %}

<div class="hidden js-modal" data-fieldid="{{ content.field_field_id|field_value }}" data-delaytime="{{ content.field_delay_time|field_value }}"></div>

<!-- Timeout trigger modal -->
{% if content.field_type_of_modal[0]['#markup'] == 'Time' %}
  {% set modalTimer = "modTimer" %}
{% endif %}

<!-- Modal -->
<div class="modal fade {{ modalTimer }}" id="{% spaceless %}{{ content.field_field_id|field_value }}{% endspaceless %}" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        {{ content.field_subheadline }}
      </div>
      <div class="modal-body">
        {{ content.field_content }}
      </div>
    </div>
  </div>
</div>